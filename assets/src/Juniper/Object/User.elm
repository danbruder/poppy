-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Juniper.Object.User exposing (..)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode
import Juniper.Enum.UserKind
import Juniper.InputObject
import Juniper.Interface
import Juniper.Object
import Juniper.Scalar
import Juniper.ScalarCodecs
import Juniper.Union


id : SelectionSet Int Juniper.Object.User
id =
    Object.selectionForField "Int" "id" [] Decode.int


kind : SelectionSet Juniper.Enum.UserKind.UserKind Juniper.Object.User
kind =
    Object.selectionForField "Enum.UserKind.UserKind" "kind" [] Juniper.Enum.UserKind.decoder


name : SelectionSet String Juniper.Object.User
name =
    Object.selectionForField "String" "name" [] Decode.string


friends :
    SelectionSet decodesTo Juniper.Object.User
    -> SelectionSet (List decodesTo) Juniper.Object.User
friends object_ =
    Object.selectionForCompositeField "friends" [] object_ (identity >> Decode.list)
